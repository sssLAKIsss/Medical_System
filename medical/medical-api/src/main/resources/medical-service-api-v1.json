{
  "openapi": "3.0.1",
  "info": {
    "title": "medical-service",
    "description": "Медицинский справочник",
    "contact": {
      "name": "Я",
      "email": "я@я.я"
    },
    "license": {
      "name": "Лицензировано мной"
    },
    "version": "medical-service-1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8082",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "patient-controller",
      "description": "Позволяет получить данные о вакцинации пациента по номеру паспорта"
    },
    {
      "name": "vaccination-data-controller",
      "description": "Позволяет загрузить данные с csv-файла"
    }
  ],
  "paths": {
    "/api/v1/medical/process-file-multipart": {
      "post": {
        "tags": [
          "vaccination-data-controller"
        ],
        "summary": "Загрузить данные с файла",
        "description": "Позволяет загрузить данные с csv-файла, файл имеет структуру: ФИОпаспортдата вакцинацииназвание вакциныуникальный номер пункта вакцинацииназвание пункта вакцинацииадрес пункта",
        "operationId": "saveCsvVaccinationFile",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "100 CONTINUE",
                    "101 SWITCHING_PROTOCOLS",
                    "102 PROCESSING",
                    "103 CHECKPOINT",
                    "200 OK",
                    "201 CREATED",
                    "202 ACCEPTED",
                    "203 NON_AUTHORITATIVE_INFORMATION",
                    "204 NO_CONTENT",
                    "205 RESET_CONTENT",
                    "206 PARTIAL_CONTENT",
                    "207 MULTI_STATUS",
                    "208 ALREADY_REPORTED",
                    "226 IM_USED",
                    "300 MULTIPLE_CHOICES",
                    "301 MOVED_PERMANENTLY",
                    "302 FOUND",
                    "302 MOVED_TEMPORARILY",
                    "303 SEE_OTHER",
                    "304 NOT_MODIFIED",
                    "305 USE_PROXY",
                    "307 TEMPORARY_REDIRECT",
                    "308 PERMANENT_REDIRECT",
                    "400 BAD_REQUEST",
                    "401 UNAUTHORIZED",
                    "402 PAYMENT_REQUIRED",
                    "403 FORBIDDEN",
                    "404 NOT_FOUND",
                    "405 METHOD_NOT_ALLOWED",
                    "406 NOT_ACCEPTABLE",
                    "407 PROXY_AUTHENTICATION_REQUIRED",
                    "408 REQUEST_TIMEOUT",
                    "409 CONFLICT",
                    "410 GONE",
                    "411 LENGTH_REQUIRED",
                    "412 PRECONDITION_FAILED",
                    "413 PAYLOAD_TOO_LARGE",
                    "413 REQUEST_ENTITY_TOO_LARGE",
                    "414 URI_TOO_LONG",
                    "414 REQUEST_URI_TOO_LONG",
                    "415 UNSUPPORTED_MEDIA_TYPE",
                    "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                    "417 EXPECTATION_FAILED",
                    "418 I_AM_A_TEAPOT",
                    "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                    "420 METHOD_FAILURE",
                    "421 DESTINATION_LOCKED",
                    "422 UNPROCESSABLE_ENTITY",
                    "423 LOCKED",
                    "424 FAILED_DEPENDENCY",
                    "425 TOO_EARLY",
                    "426 UPGRADE_REQUIRED",
                    "428 PRECONDITION_REQUIRED",
                    "429 TOO_MANY_REQUESTS",
                    "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                    "500 INTERNAL_SERVER_ERROR",
                    "501 NOT_IMPLEMENTED",
                    "502 BAD_GATEWAY",
                    "503 SERVICE_UNAVAILABLE",
                    "504 GATEWAY_TIMEOUT",
                    "505 HTTP_VERSION_NOT_SUPPORTED",
                    "506 VARIANT_ALSO_NEGOTIATES",
                    "507 INSUFFICIENT_STORAGE",
                    "508 LOOP_DETECTED",
                    "509 BANDWIDTH_LIMIT_EXCEEDED",
                    "510 NOT_EXTENDED",
                    "511 NETWORK_AUTHENTICATION_REQUIRED"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/medical/patient": {
      "get": {
        "tags": [
          "patient-controller"
        ],
        "summary": "Получить данные о вакцинации",
        "description": "Позволяет получить данные о вакцинации по номеру паспорта",
        "operationId": "getByPassportNumber",
        "parameters": [
          {
            "name": "passportNumber",
            "in": "query",
            "required": true,
            "schema": {
              "pattern": "^[0-9]{10}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PatientDto"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "Статус",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Системное сообщение ошибки"
          },
          "error": {
            "type": "string",
            "description": "Ошибка"
          },
          "timestamp": {
            "type": "string",
            "description": "Время, когда произошла ошибка",
            "format": "date-time"
          },
          "rawMessage": {
            "type": "string",
            "description": "Сообщение исключеня java"
          }
        },
        "description": "Ошибка обработки запроса"
      },
      "PatientDto": {
        "required": [
          "documentNumber",
          "firstName",
          "lastName",
          "patronymic"
        ],
        "type": "object",
        "properties": {
          "lastName": {
            "type": "string",
            "description": "Фамилия вакцинальщика",
            "example": "Андреев"
          },
          "firstName": {
            "type": "string",
            "description": "Имя вакцинальщика",
            "example": "Андрей"
          },
          "patronymic": {
            "type": "string",
            "description": "Отчество вакцинальщика",
            "example": "Андреич"
          },
          "documentNumber": {
            "pattern": "^[0-9]{10}$",
            "type": "string",
            "description": "Номер паспорта",
            "example": "4510003221"
          },
          "vaccinationDtos": {
            "type": "array",
            "description": "Вакцинация",
            "items": {
              "$ref": "#/components/schemas/VaccinationDto"
            }
          }
        }
      },
      "VaccinationDto": {
        "required": [
          "chippingDate",
          "vaccinationPoint",
          "vaccine"
        ],
        "type": "object",
        "properties": {
          "lastModifiedDate": {
            "type": "string",
            "description": "Дата последнего изменения сущности"
          },
          "dateTimeCreation": {
            "type": "string",
            "description": "Дата создания сущности"
          },
          "chippingDate": {
            "type": "string",
            "description": "Дата вакцинации"
          },
          "vaccine": {
            "$ref": "#/components/schemas/VaccineDto"
          },
          "vaccinationPoint": {
            "$ref": "#/components/schemas/VaccinationPointDto"
          }
        },
        "description": "Вакцинация"
      },
      "VaccinationPointDto": {
        "required": [
          "address",
          "city",
          "vaccinationPointNumber",
          "vaccinationPointTitle"
        ],
        "type": "object",
        "properties": {
          "lastModifiedDate": {
            "type": "string",
            "description": "Дата последнего изменения сущности"
          },
          "dateTimeCreation": {
            "type": "string",
            "description": "Дата создания сущности"
          },
          "vaccinationPointNumber": {
            "type": "string",
            "description": "Уникальный номер пункта вакцинации",
            "example": "Пункт №1"
          },
          "vaccinationPointTitle": {
            "type": "string",
            "description": "Название пункта вакцинации",
            "example": "Детская неожиданность"
          },
          "city": {
            "type": "string",
            "description": "Город",
            "example": "Волгоград"
          },
          "address": {
            "type": "string",
            "description": "Адрес пункта вакцинации",
            "example": "Менделеева 104, 55"
          }
        },
        "description": "Пункты вакцинации вакцинальщика"
      },
      "VaccineDto": {
        "required": [
          "vaccineTitle"
        ],
        "type": "object",
        "properties": {
          "lastModifiedDate": {
            "type": "string",
            "description": "Дата последнего изменения сущности"
          },
          "dateTimeCreation": {
            "type": "string",
            "description": "Дата создания сущности"
          },
          "vaccineTitle": {
            "type": "string",
            "description": "Название вакцины",
            "example": "Спутник-5"
          }
        },
        "description": "Вакцины, которые перенес вакцинальщик"
      }
    }
  }
}